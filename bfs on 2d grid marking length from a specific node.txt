/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class cses
{   
    static int n=0,m=0;
    static int mod=1000000007;
    static FastReader sc=new FastReader();
    static char[][] mat=new char[1001][1001];
    static int vis[][]=new int[1001][1001];
    static int dis[][]=new int[1001][1001];

	public static void main (String[] args) throws java.lang.Exception
	{
		n=sc.nextInt();
		m=sc.nextInt();
		int a=0,b=0;
		for(int i=0;i<n;++i)
		{
		    String s=sc.next();
		    for(int j=0;j<m;++j)
		    {
		        mat[i][j]=s.charAt(j);
		        if(mat[i][j]=='A'){
		            a=i;
		            b=j;
		        }
		    }
		}
	    bfs(a,b);
		for(int i=0;i<n;++i)
		{
			for(int j=0;j<m;++j)
			{
				System.out.print(dis[i][j]+" ");
			}
			System.out.println();
		}
    }
    static class node
    {
        int x;
        int y;
        node(int x,int y)
        {
            this.x=x;
            this.y=y;
        }
    }
	static void bfs(int x,int y)
	{
	   
	    Queue<node> q=new LinkedList<>();
	    vis[x][y]=1;
	    dis[x][y]=0;
	    q.add(new node(x,y));
	    int dx[]={-1,0,1,0};
	    int dy[]={0,1,0,-1};

	    while(!q.isEmpty())
	    {
	        int cx=q.peek().x;
	        int cy=q.peek().y;
	        q.remove();
            for(int i=0;i<4;++i)
	           {
	            if(isValid(cx+dx[i],cy+dy[i]))
	              {
	                  int nx=cx+dx[i];
	                  int ny=cy+dy[i];
	                  dis[nx][ny]=dis[cx][cy]+1;
	                  vis[nx][ny]=1;
	                  q.add(new node(nx,ny));
	              }
	           }    
	    }
	    
	}
	static boolean isValid(int x,int y)
	{
	    if(x<0 || x>n-1 || y<0 || y>m-1)return false;
	    if(vis[x][y]==1 || mat[x][y]=='#') return false;
	    return true;
	}
	static void printintarray(int[] arr)
{
	int n=arr.length;
	for(int i=0;i<n;++i)
	{
		System.out.print(arr[i]+" ");
	}
	System.out.println();
}
	static void printlongarray(long[] arr)
{
	int n=arr.length;
	for(int i=0;i<n;++i)
	{
		System.out.print(arr[i]+" ");
	}
	System.out.println();
}

	static int[] arrayintinput(int n)
	{
	    int arr[]=new int[n];
	    for(int i=0;i<n;++i)
	    {
	        arr[i]=sc.nextInt();
	    }
	    return arr;
	}
	static long[] arraylonginput(int n)
	{
	    long arr[]=new long[n];
	    for(int i=0;i<n;++i)
	    {
	        arr[i]=sc.nextLong();
	    }
	    return arr;
	}
	static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
 
}
//  System.out.println("Case #"+(y+1)+": "+ans);


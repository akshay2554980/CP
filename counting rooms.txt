/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class cses
{   
    static int mod=1000000007;
    static FastReader sc=new FastReader();
	public static void main (String[] args) throws java.lang.Exception
	{
		    int n=sc.nextInt();
		    int m=sc.nextInt();
		    Character mat[][]=new Character[n][m];

		    for(int i=0;i<n;++i)
		    {
		        String s=sc.next();
		        for(int j=0;j<m;++j)
		        {
		            mat[i][j]=s.charAt(j);    
		        }
		    }
		    int ans=0;
		    for(int i=0;i<n;++i)
		    {
		        for(int j=0;j<m;++j)
		        {
		            if(mat[i][j]=='.')
		            {
                        ++ans;
		                solve(mat,i,j,n,m);
                        
		            }
		             else{
                        continue;
		             }
		        }
		    }
		    System.out.println(ans);
	
    }
	
	static void solve(Character[][] mat,int i,int j,int n,int m)
	{		
//first write recursive condition otherwise it will give stackoverflow error..	    	
	    	if(mat[i][j]!='.')
	    	{
	    		return;
	    	}
            if(mat[i][j]=='.')
            {
                
                mat[i][j]='#';
	            if(j-1>=0)solve(mat,i,j-1,n,m);
                if(j+1<m)solve(mat,i,j+1,n,m);
	            if(i-1>=0)solve(mat,i-1,j,n,m);
	            if(i+1<n)solve(mat,i+1,j,n,m);
                
                
            }
            return;
	}
	static void printintarray(int[] arr)
{
	int n=arr.length;
	for(int i=0;i<n;++i)
	{
		System.out.print(arr[i]+" ");
	}
	System.out.println();
}
	static void printlongarray(long[] arr)
{
	int n=arr.length;
	for(int i=0;i<n;++i)
	{
		System.out.print(arr[i]+" ");
	}
	System.out.println();
}

	static int[] arrayintinput(int n)
	{
	    int arr[]=new int[n];
	    for(int i=0;i<n;++i)
	    {
	        arr[i]=sc.nextInt();
	    }
	    return arr;
	}
	static long[] arraylonginput(int n)
	{
	    long arr[]=new long[n];
	    for(int i=0;i<n;++i)
	    {
	        arr[i]=sc.nextLong();
	    }
	    return arr;
	}
	static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
 
}
//  System.out.println("Case #"+(y+1)+": "+ans);

